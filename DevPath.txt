Started with Ticket/Event API.
Creating tickets and events.
Ability to parse QR code and generate one.

Big pieces.
Payment mechanism (backend setup). Strip account etc.
UI to accept that and also send it to the backend.
Also UI to accept customer info.

Notification Mechanism to customers as expanded in SendNotification.txt

--Update as of 4/28
 Need to get the event id in the application. Right now it defaults to One.
 How will event id feed to the UI? Is it through branding url?

 Get event entitlements from dn and show on UI?

 --update as of 4/6
 Looked at ticketleap.customer

 Need to change the sale mechanism. Havd to generate a sales receipt for order and link it to tickets.
 So need a sale table with a confirmation ID generated.

 Need to change the url to buy tickets to include event and org. So maybe need an  org table also
 So the url would be something like https://www.ticketleap.events/tickets/polkadots/evetn-firs

 --Update as of 5/12
 Big pieces to work on:

 Change database struct based on product research.

 Change/ add calls to API to incorporate new structure.

 Email/ Notification sending mechanism.

 --Analyzing SV notification engine
 We create a notification queue class for each service (AWS, Mandarill ,Twilio Etc).
 Each queue class has a list of notifications orderd by priority 
 Each queue has a Task or worker function.
 The worker/Task processes notifications by priority. Each Notification Queue is processed in its own Task
 and each notification is also sent in its own task.

 --Action: Look at SQS queues and see how we can split queues by priorty of objects,
  Cost and do we pair Queues with lambda or just a home grown worker?


 


