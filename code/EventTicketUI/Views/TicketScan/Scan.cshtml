@model EventTicket.Customer
@{
    ViewData["Title"] = "Event Ticket Page";
}
 <video id="webcam-preview"></video>


 @* @Html.Hidden("TicketCode", Model.TicketCode) *@

 <form asp-action="Scan">
    <div class="form-group"></div>
        <label asp-for="TicketCode" class="control-label"></label>
        <input asp-for="TicketCode" class="form-control" />
    </div>

    <div class="form-group">
        <input type="submit" value="Validate"  class="btn btn-primary" />
    </div>
</form>

<script type="text/javascript" src="~/js/zxingscan.js"></script>
@* <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script> *@
<script>
  const codeReader = new ZXing.BrowserQRCodeReader();

  codeReader.decodeFromVideoDevice(null, 'webcam-preview', (result, err) => {
    if (result) {
      // properly decoded qr code
      console.log('Found QR code!', result)
      @* Model.TicketCode=result.text *@
      document.getElementById('TicketCode').value = result.text
      @* model.TicketCode = result.text *@
    }

    if (err) {
      // As long as this error belongs into one of the following categories
      // the code reader is going to continue as excepted. Any other error
      // will stop the decoding loop.
      //
      // Excepted Exceptions:
      //
      //  - NotFoundException
      //  - ChecksumException
      //  - FormatException

      if (err instanceof ZXing.NotFoundException) {
        console.log('No QR code found.')
      }

      if (err instanceof ZXing.ChecksumException) {
        console.log('A code was found, but it\'s read value was not valid.')
      }

      if (err instanceof ZXing.FormatException) {
        console.log('A code was found, but it was in a invalid format.')
      }
    }
  })
</script>